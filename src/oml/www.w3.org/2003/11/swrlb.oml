@dc:creator "W3C"
@dc:rights "Copyright 2003 W3C."
@dc:source "https://www.w3.org/Submission/SWRL/"
@dc:description "The SWRL Built-In vocabulary is a submission maintained by the W3C."
@dc:title "SWRL Built-Ins"
vocabulary <http://www.w3.org/2003/11/swrlb#> as swrlb {

	extends <http://purl.org/dc/elements/1.1/> as dc

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	// Comparison Built-Ins

	@rdfs:comment "Satisfied iff the first argument and the second argument are the same."
    builtin equal
    
    @rdfs:comment  "The negation of swrlb:equal."
    builtin notEqual
    
    @rdfs:comment  "Satisfied iff the first argument and the second argument are both in some implemented type and the first argument is less than the second argument according to a type-specific ordering (partial or total), if there is one defined for the type. The ordering function for the type of untyped literals is the partial order defined as string ordering when the language tags are the same (or both missing) and incomparable otherwise."
    builtin lessThan
    
    @rdfs:comment  "Either less than, as above, or equal, as above."
    builtin lessThanOrEqual
    
    @rdfs:comment  "Similarly to swrlb:lessThan."
    builtin greaterThan
    
    @rdfs:comment  "Similarly to swrlb:lessThanOrEqual."
    builtin greaterThanOrEqual
 
 	// Comparison Built-Ins
     
    @rdfs:comment "Satisfied iff the first argument is equal to the arithmetic sum of the second argument through the last argument."
    builtin add
    
    @rdfs:comment "Satisfied iff the first argument is equal to the arithmetic difference of the second argument minus the third argument."
    builtin subtract
    
    @rdfs:comment "Satisfied iff the first argument is equal to the arithmetic product of the second argument through the last argument."
    builtin multiply
    
    @rdfs:comment "Satisfied iff the first argument is equal to the arithmetic quotient of the second argument divided by the third argument."
    builtin divide
    
    @rdfs:comment "Satisfied if the first argument is the arithmetic quotient of the second argument idiv the third argument. If the numerator is not evenly divided by the divisor, then the quotient is the xsd:integer value obtained, ignoring any remainder that results from the division (that is, no rounding is performed)."
    builtin integerDivide
    
    @rdfs:comment "Satisfied if the first argument represents the remainder resulting from dividing the second argument, the dividend, by the third argument, the divisor. The operation a mod b for operands that are xsd:integer or xsd:decimal, or types derived from them, produces a result such that (a idiv b)*b+(a mod b) is equal to a and the magnitude of the result is always less than the magnitude of b. This identity holds even in the special case that the dividend is the negative integer of largest possible magnitude for its type and the divisor is -1 (the remainder is 0). It follows from this rule that the sign of the result is the sign of the dividend"
    builtin mod
    
    @rdfs:comment "Satisfied iff the first argument is equal to the result of the second argument raised to the third argument power."
    builtin pow
    
    @rdfs:comment "Satisfied iff the first argument is equal to the second argument with its sign unchanged."
    builtin unaryPlus
    
    @rdfs:comment "Satisfied iff the first argument is equal to the second argument with its sign reversed."
    builtin unaryMinus
    
    @rdfs:comment "Satisfied iff the first argument is the absolute value of the second argument."
    builtin abs
    
    @rdfs:comment "Satisfied iff the first argument is the smallest number with no fractional part that is greater than or equal to the second argument."
    builtin ceiling
    
    @rdfs:comment "Satisfied iff the first argument is the largest number with no fractional part that is less than or equal to the second argument."
    builtin floor
    
    @rdfs:comment "Satisfied iff the first argument is equal to the nearest number to the second argument with no fractional part."
    builtin round
    
    @rdfs:comment "Satisfied iff the first argument is equal to the second argument rounded to the given precision. If the fractional part is exactly half, the result is the number whose least significant digit is even."
    builtin roundHalfToEven
    
    @rdfs:comment "Satisfied iff the first argument is equal to the sine of the radian value the second argument."
    builtin sin
    
    @rdfs:comment "Satisfied iff the first argument is equal to the cosine of the radian value the second argument."
    builtin cos
    
    @rdfs:comment "Satisfied iff the first argument is equal to the tangent of the radian value the second argument."
    builtin tan
    
    // Boolean Built-Ins
    
    @rdfs:comment "Satisfied iff the first argument is true and the second argument is false, or vice versa."
    builtin booleanNot
    
    @rdfs:comment "Satisfied iff the first argument is the same as the second argument (upper/lower case ignored)"
    builtin stringEqualIgnoreCase
    
    @rdfs:comment "Satisfied iff the first argument is equal to the string resulting from the concatenation of the strings the second argument through the last argument."
    builtin stringConcat
    
    @rdfs:comment "Satisfied iff the first argument is equal to the substring of optional length the fourth argument starting at character offset the third argument in the string the second argument."
    builtin substring
    
    @rdfs:comment "Satisfied iff the first argument is equal to the length of the second argument."
    builtin stringLength
    
    @rdfs:comment "Satisfied iff the first argument is equal to the whitespace-normalized value of the second argument."
    builtin normalizeSpace
    
    @rdfs:comment "Satisfied iff the first argument is equal to the upper-cased value of the second argument."
    builtin upperCase
    
    @rdfs:comment "Satisfied iff the first argument is equal to the lower-cased value of the second argument."
    builtin lowerCase

    @rdfs:comment "Satisfied iff the first argument is equal to the second argument with occurrences of characters contained in the third argument replaced by the character at the corresponding position in the string the fourth argument."
    builtin translate

    @rdfs:comment "Satisfied iff the first argument contains the second argument (case sensitive)."
    builtin contains

    @rdfs:comment "Satisfied iff the first argument contains the second argument (case ignored)."
    builtin containsIgnoreCase

    @rdfs:comment "Satisfied iff the first argument starts with the second argument."
    builtin startsWith

    @rdfs:comment "Satisfied iff the first argument ends with the second argument."
    builtin endsWith

    @rdfs:comment "Satisfied iff the first argument is the characters of the second argument that precede the characters of the third argument."
    builtin substringBefore

    @rdfs:comment "Satisfied iff the first argument is the characters of the second argument that follow the characters of the third argument."
    builtin substringAfter

    @rdfs:comment "Satisfied iff the first argument matches the regular expression the second argument."
    builtin matches

    @rdfs:comment "Satisfied iff the first argument is equal to the value of the second argument with every substring matched by the regular expression the third argument replaced by the replacement string the fourth argument."
    builtin replace

    @rdfs:comment "Satisfied iff the first argument is a sequence of one or more strings whose values are substrings of the second argument separated by substrings that match the regular expression the third argument."
    builtin tokenize

	// Date, Time, and Duration Built-Ins

    @rdfs:comment "Satisfied iff the first argument is the xsd:duration representation consisting of the year the second argument and month the third argument."
    builtin yearMonthDuration

    @rdfs:comment "Satisfied iff the first argument is the xsd:duration representation consisting of the days the second argument, hours the third argument, minutes the fourth argument, and seconds the fifth argument."
    builtin dayTimeDuration

    @rdfs:comment "Satisfied iff the first argument is the xsd:dateTime representation consisting of the year the second argument, month the third argument, day the fourth argument, hours the fifth argument, minutes the sixth argument, seconds the seventh argument, and timezone the eighth argument."
    builtin dateTime

    @rdfs:comment "Satisfied iff the first argument is the xsd:date representation consisting of the year the second argument, month the third argument, day the fourth argument, and timezone the fifth argument."
    builtin date

    @rdfs:comment "Satisfied iff the first argument is the xsd:time representation consisting of the hours the second argument, minutes the third argument, seconds the fourth argument, and timezone the fifth argument."
    builtin time
    
    @rdfs:comment "Satisfied iff the yearMonthDuration the first argument is equal to the arithmetic sum of the yearMonthDuration the second argument through the yearMonthDuration the last argument."
    builtin addYearMonthDurations

    @rdfs:comment "Satisfied iff the yearMonthDuration the first argument is equal to the arithmetic difference of the yearMonthDuration the second argument minus the yearMonthDuration the third argument."
    builtin subtractYearMonthDurations

    @rdfs:comment "Satisfied iff the yearMonthDuration the first argument is equal to the arithmetic product of the yearMonthDuration the second argument multiplied by the third argument."
    builtin multiplyYearMonthDuration

    @rdfs:comment "Satisfied iff the yearMonthDuration the first argument is equal to the arithmetic remainder of the yearMonthDuration the second argument divided by the third argument."
    builtin divideYearMonthDurations

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic sum of the dayTimeDuration the second argument through the dayTimeDuration the last argument."
    builtin addDayTimeDurations

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic difference of the dayTimeDuration the second argument minus the dayTimeDuration the third argument."
    builtin subtractDayTimeDurations

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic product of the dayTimeDuration the second argument multiplied by the third argument."
    builtin multiplyDayTimeDurations

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic remainder of the dayTimeDuration the second argument divided by the third argument."
    builtin divideDayTimeDuration

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic difference of the xsd:date the second argument minus the xsd:date the third argument."
    builtin subtractDates

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic difference of the xsd:time the second argument minus the xsd:time the third argument."
    builtin subtractTimes

    @rdfs:comment "Satisfied iff the xsd:dateTime the first argument is equal to the arithmetic sum of the xsd:dateTime the second argument plus the yearMonthDuration the third argument."
    builtin addYearMonthDurationToDateTime

    @rdfs:comment "Satisfied iff the xsd:dateTime the first argument is equal to the arithmetic sum of the xsd:dateTime the second argument plus the dayTimeDuration the third argument."
    builtin addDayTimeDurationToDateTime

    @rdfs:comment "Satisfied iff the xsd:dateTime the first argument is equal to the arithmetic difference of the xsd:dateTime the second argument minus the yearMonthDuration the third argument."
    builtin subtractYearMonthDurationFromDateTime

    @rdfs:comment "Satisfied iff the xsd:dateTime the first argument is equal to the arithmetic difference of the xsd:dateTime the second argument minus the dayTimeDuration the third argument."
    builtin subtractDayTimeDurationFromDateTime

    @rdfs:comment "Satisfied iff the xsd:date the first argument is equal to the arithmetic sum of the xsd:date the second argument plus the yearMonthDuration the third argument."
    builtin addYearMonthDurationToDate

    @rdfs:comment "Satisfied iff the xsd:date the first argument is equal to the arithmetic sum of the xsd:date the second argument plus the dayTimeDuration the third argument."
    builtin addDayTimeDurationToDate

    @rdfs:comment "Satisfied iff the xsd:date the first argument is equal to the arithmetic difference of the xsd:date the second argument minus the yearMonthDuration the third argument."
    builtin subtractYearMonthDurationFromDate

    @rdfs:comment "Satisfied iff the xsd:date the first argument is equal to the arithmetic difference of the xsd:date the second argument minus the yearMonthDuration the third argument."
    builtin subtractDayTimeDurationFromDate

    @rdfs:comment "Satisfied iff the xsd:time the first argument is equal to the arithmetic sum of the xsd:time the second argument plus the dayTimeDuration the third argument."
    builtin addDayTimeDurationToTime

    @rdfs:comment "Satisfied iff the xsd:time the first argument is equal to the arithmetic difference of the xsd:time the second argument minus the dayTimeDuration the third argument."
    builtin subtractDayTimeDurationFromTime

    @rdfs:comment "Satisfied iff the yearMonthDuration the first argument is equal to the arithmetic difference of the xsd:dateTime the second argument minus the xsd:dateTime the third argument."
    builtin subtractDateTimesYieldingYearMonthDuration

    @rdfs:comment "Satisfied iff the dayTimeDuration the first argument is equal to the arithmetic difference of the xsd:dateTime the second argument minus the xsd:dateTime the third argument."
    builtin subtractDateTimesYieldingDayTimeDuration

	// Urelation instance Built-Ins
	
    @rdfs:comment "Satisfied iff the Urelation instance reference the first argument is equal to the value of the Urelation instance reference the second argument resolved relative to the base Urelation instance the third argument."
    builtin resolveURI
	
    @rdfs:comment "Satisfied iff the first argument is a Urelation instance reference consisting of the scheme the second argument, host the third argument, port the fourth argument, path the fifth argument, query the sixth argument, and fragment the seventh argument."
    builtin anyURI
    
    // List Built-Ins

    @rdfs:comment "Satisfied iff the first argument is a list representing the concatenation of the lists the second argument through the last argument."
    builtin listConcat

    @rdfs:comment "Satisfied iff the first argument is a list containing elements found in both the list the second argument and the list the third argument."
    builtin listIntersection

    @rdfs:comment "Satisfied iff the first argument is a list containing the elements of the list the second argument that are not members of the list the third argument."
    builtin listSubtraction

    @rdfs:comment "Satisfied iff the first argument is a member of the list the second argument."
    builtin member

    @rdfs:comment "Satisfied iff the first argument is the length of the list the second argument (number of members of the list)."
    builtin ^length
    
    @rdfs:comment "Satisfied iff the first argument is the first member of the list the second argument."
    builtin first
    
    @rdfs:comment "Satisfied iff the first argument is a list containing all members of the list the second argument except the first member (the head)."
    builtin rest

    @rdfs:comment "Satisfied iff the list the first argument contains the list the second argument."
    builtin sublist

    @rdfs:comment "Satisfied iff the list the first argument is an empty list."
    builtin empty

}