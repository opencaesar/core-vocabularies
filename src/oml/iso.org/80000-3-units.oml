@dc:^source "ISO 80000-3:2019(en)"
@dc:^source "https://www.iso.org/obp/ui/#iso:std:iso:80000:-3:ed-2:v1:en"
vocabulary <http://iso.org/80000-3-units> with # as 80000-3-units {

    extends <http://iso.org/80000-concepts>

    uses <http://iso.org/80000-1>

    aspect UnitOfLengthValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfLength
    ]
    
    @dc:^source "3-1"
    concept UnitOfLength :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]

    concept metre :> UnitOfLength, metrology:IndependentMeasurementUnit, 80000-concepts:MeasurementUnit

    concept kilometre :> UnitOfLength, metrology:PrefixedMeasurementUnit, 80000-concepts:MeasurementUnit [
        restricts relation metrology:hasPrefix to 80000-1:kilo
    ]

    aspect UnitOfAngularMeasureValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfAngularMeasure
    ]
    
    @dc:^source "3-5"
    concept UnitOfAngularMeasure :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]

    concept radian :> UnitOfAngularMeasure, metrology:DerivedMeasurementUnit, 80000-concepts:MeasurementUnit 

    relation entity radian-of-numerator :> metrology:HasFactorForMeasurementUnit [
        from radian
        to metre
        forward radian-of-numerator-factor
        restricts scalar property metrology:exponent to "1/1"^^owl:rational
    ]

    relation entity radian-of-denominator :> metrology:HasFactorForMeasurementUnit [
        from radian
        to metre
        forward radian-of-denominator-factor
        restricts scalar property metrology:exponent to "-1/1"^^owl:rational
    ]

    aspect UnitOfTimeValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfTime
    ]
    
    @dc:^source "3-9"
    concept UnitOfTime :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]

    concept second :> UnitOfTime, metrology:IndependentMeasurementUnit, 80000-concepts:MeasurementUnit

    concept millisecond :> UnitOfTime, metrology:PrefixedMeasurementUnit [
        restricts relation metrology:hasPrefix to 80000-1:milli
    ]

    concept minute :> UnitOfTime, metrology:NonCoherentDerivedMeasurementUnit, 80000-concepts:MeasurementUnit [
        restricts scalar property metrology:nonCoherentRelationship to "1 minute = 60 seconds"^^xsd:string
        restricts all relation metrology:nonCoherentDerivedMeasurementUnitOf to second
    ]

    concept hour :> UnitOfTime, metrology:NonCoherentDerivedMeasurementUnit, 80000-concepts:MeasurementUnit [
        restricts scalar property metrology:nonCoherentRelationship to "1 hour = 60 minutes"
        restricts all relation metrology:nonCoherentDerivedMeasurementUnitOf to minute
    ]

    aspect UnitOfVelocityValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfVelocity
    ]

    @dc:^source "3-10"
    concept UnitOfVelocity :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]

    concept metre-per-second :> UnitOfVelocity, metrology:DerivedMeasurementUnit, 80000-concepts:MeasurementUnit

    relation entity metre-per-second_of_metre :>  metrology:HasFactorForMeasurementUnit [
        from metre-per-second
        to metre
        forward metre-per-second_of_metre-factor
        restricts scalar property metrology:exponent to "1/1"^^owl:rational
    ]

    relation entity metre-per-second_of_second :>  metrology:HasFactorForMeasurementUnit [
        from metre-per-second
        to second
        forward metre-per-second_of_second-factor
        restricts scalar property metrology:exponent to "-1/1"^^owl:rational
    ]

    concept kilometre-per-second :> UnitOfVelocity, metrology:DerivedMeasurementUnit, 80000-concepts:MeasurementUnit

    relation entity kilometre-per-second_of_metre :>  metrology:HasFactorForMeasurementUnit [
        from metre-per-second
        to kilometre
        forward kilometre-per-second_of_metre-factor
        restricts scalar property metrology:exponent to "1/1"^^owl:rational
    ]

    relation entity kilometre-per-second_of_second :>  metrology:HasFactorForMeasurementUnit [
        from metre-per-second
        to second
        forward kilometre-per-second_of_second-factor
        restricts scalar property metrology:exponent to "-1/1"^^owl:rational
    ]

    aspect UnitOfRotationValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfRotation
    ]

    @dc:^source "3-16"
    concept UnitOfRotation :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]

    concept revolutions :> UnitOfRotation, metrology:DerivedMeasurementUnit, 80000-concepts:MeasurementUnit

    relation entity revolutions-of-radian :> metrology:HasFactorForMeasurementUnit [
        from revolutions
        to radian
        forward revolutions-of-radian-factor
        restricts scalar property metrology:exponent to "1/1"^^owl:rational
    ]

    aspect UnitOfFrequencyValue :> metrology:UnitaryQuantityValue [
        restricts all relation metrology:hasReference to UnitOfFrequency
    ]
    
    @dc:^source "3-17"
    concept UnitOfFrequency :> metrology:CoherentMeasurementUnit [
        restricts scalar property metrology:isDimensionlessMeasurementUnit to false^^xsd:boolean
    ]
    
    concept hertz :> UnitOfFrequency, metrology:DerivedMeasurementUnit, 80000-concepts:MeasurementUnit

    relation entity hertz_of_second :> metrology:HasFactorForMeasurementUnit [
        from hertz
        to second
        forward hertz-of-second-factor
        restricts scalar property metrology:exponent to "-1/1"^^owl:rational
    ]

}